/*
 * generated by Xtext 2.25.0
 */
package org.eclipse.emfatic.formatting2

import com.google.inject.Inject
import org.eclipse.emf.ecore.EAnnotation
import org.eclipse.emf.ecore.EPackage
import org.eclipse.emfatic.services.EmfaticGrammarAccess
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class EmfaticFormatter extends AbstractFormatter2 {
	
	@Inject extension EmfaticGrammarAccess

	def dispatch void format(EPackage ePackage, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (eAnnotation : ePackage.EAnnotations) {
			eAnnotation.format
		}
		for (eClassifier : ePackage.EClassifiers) {
			eClassifier.format
		}
		for (_ePackage : ePackage.ESubpackages) {
			_ePackage.format
		}
	}

	def dispatch void format(EAnnotation eAnnotation, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (_eAnnotation : eAnnotation.EAnnotations) {
			_eAnnotation.format
		}
		for (eStringToStringMapEntry : eAnnotation.details) {
			eStringToStringMapEntry.format
		}
		for (eObject : eAnnotation.contents) {
			eObject.format
		}
	}
	
	// TODO: implement for ETypeParameter, EClass, EDataType, EEnum, EGenericType, EOperation, EParameter, EAttribute, EReference, EEnumLiteral
}
