/*
 * generated by Xtext 2.28.0
 */
package org.eclipse.emf.emfatic.xtext.ui.quickfix;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.emfatic.xtext.emfatic.CompUnit;
import org.eclipse.emf.emfatic.xtext.emfatic.Import;
import org.eclipse.emf.emfatic.xtext.validation.IssueCodes;
import org.eclipse.xtext.ui.editor.model.IXtextDocument;
import org.eclipse.xtext.ui.editor.model.edit.IModificationContext;
import org.eclipse.xtext.ui.editor.quickfix.DefaultQuickfixProvider;
import org.eclipse.xtext.ui.editor.quickfix.Fix;
import org.eclipse.xtext.ui.editor.quickfix.IssueResolutionAcceptor;
import org.eclipse.xtext.validation.Issue;

/**
 * Custom quickfixes.
 *
 * See https://www.eclipse.org/Xtext/documentation/310_eclipse_support.html#quick-fixes
 */
public class EmfaticQuickfixProvider extends DefaultQuickfixProvider {

//	@Fix(EmfaticValidator.INVALID_NAME)
//	public void capitalizeName(final Issue issue, IssueResolutionAcceptor acceptor) {
//		acceptor.accept(issue, "Capitalize name", "Capitalize the name.", "upcase.png", new IModification() {
//			public void apply(IModificationContext context) throws BadLocationException {
//				IXtextDocument xtextDocument = context.getXtextDocument();
//				String firstLetter = xtextDocument.get(issue.getOffset(), 1);
//				xtextDocument.replace(issue.getOffset(), 1, firstLetter.toUpperCase());
//			}
//		});
//	}
	
	@Fix(IssueCodes.INVALID_METAMODEL_IMPORTED)
	public void removeImport(final Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(
				issue,
				"Remove import", "Remove invalid metamodel.", "upcase.png",
				(EObject element, IModificationContext context) -> {
						Import i = (Import) element;
						CompUnit unit = (CompUnit) i.eContainer();
						unit.getImports().remove(i);
					}
				);
	}
	
	@Fix(IssueCodes.EXTEND_CYCLE_DETECTED)
	public void removeSuperClass(final Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(
				issue,
				"Remove class", "Remove cycle class.", "upcase.png",
				(EObject element, IModificationContext context) -> {
						Import i = (Import) element;
						CompUnit unit = (CompUnit) i.eContainer();
						unit.getImports().remove(i);
					}
				);
	}
	
	@Fix(IssueCodes.URI_INSTEAD_OF_LABEL)
	public void replaceByLabel(final Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(
				issue,
				"Replace URI", "Used defined label.", "upcase.png",
				(EObject element, IModificationContext context) -> {
					IXtextDocument xtextDocument = context.getXtextDocument();
					String firstLetter = xtextDocument.get(issue.getOffset(), 1);
					xtextDocument.replace(issue.getOffset(), issue.getLength(), issue.getData()[0]);
					}
				);
	}

}
